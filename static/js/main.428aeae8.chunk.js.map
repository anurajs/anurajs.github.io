{"version":3,"sources":["scrobble-reader/Scrobbler.jsx","App.js","reportWebVitals.js","index.js"],"names":["getSong","user","key","a","url","fetch","respone","Response","json","data","nowplaying","song","name","artist","Scrobbler","queryParams","URLSearchParams","window","location","search","get","api_key","useState","setSong","useEffect","initSong","interval","setInterval","clearInterval","speed","gradient","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAGMA,EAAO,uCAAG,WAAOC,EAAMC,GAAb,qBAAAC,EAAA,6DACRC,EADQ,qDAC4CF,EAD5C,iBACwDD,EADxD,6DAEQI,MAAMD,GAFd,UAERE,EAFQ,OAGTC,SAHS,yCAIL,oDAJK,uBAMKD,EAAQE,OANb,YAMRC,EANQ,QAOL,WAAYA,EAAK,SAASC,WAPrB,wBAQRC,EAAO,CACTC,KAAMH,EAAI,KACVI,OAAQJ,EAAI,OAAW,UAVb,kBAYLE,GAZK,iCAcL,6BAdK,4CAAH,wDA2CEG,EAzBG,WAChB,IAAMC,EAAc,IAAIC,gBAAgBC,OAAOC,SAASC,QAClDlB,EAAOc,EAAYK,IAAI,QACvBC,EAAUN,EAAYK,IAAI,OAChC,EAAwBE,qBAAxB,mBAAOX,EAAP,KAAaY,EAAb,KAcA,OAbAC,qBAAU,WACR,IAAMC,EAAQ,uCAAG,sBAAAtB,EAAA,sEACFH,EAAQC,EAAMoB,GADZ,mFAAH,qDAGdI,IACA,IAAMC,EAAWC,YAAW,sBAAC,sBAAAxB,EAAA,kEAC3BoB,EAD2B,SACbvB,EAAQC,EAAMoB,GADD,6EAE1B,KACH,OAAO,WACLO,cAAcF,MAEf,CAACzB,EAAMoB,IAGR,cAAC,IAAD,CAASQ,MAAO,GAAIC,UAAU,EAA9B,SACE,8BAAMnB,OC9BGoB,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.428aeae8.chunk.js","sourcesContent":["import Marquee from 'react-fast-marquee';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst getSong = async (user, key) => {\r\n  const url = `https://ws.audioscrobbler.com/2.0/?api_key=${key}&user=${user}&format=json&method=user.getrecenttracks&limit=1`;\r\n  const respone = await fetch(url);\r\n  if (!Response) {\r\n    return 'Check your api key or username in the URL params';\r\n  }\r\n  const data = await respone.json();\r\n  if (data['@attr'] && data['@attr'].nowplaying) {\r\n    let song = {\r\n      name: data['name'],\r\n      artist: data['artist']['#text']\r\n    };\r\n    return song;\r\n  } else {\r\n    return 'Not Listening to Anything';\r\n  }\r\n};\r\n\r\nconst Scrobbler = () => {\r\n  const queryParams = new URLSearchParams(window.location.search);\r\n  const user = queryParams.get('user');\r\n  const api_key = queryParams.get('key');\r\n  const [song, setSong] = useState();\r\n  useEffect(() => {\r\n    const initSong = async () => {\r\n      return await getSong(user, api_key);\r\n    };\r\n    initSong();\r\n    const interval = setInterval(async () => {\r\n      setSong(await getSong(user, api_key));\r\n    }, 4000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [user, api_key]);\r\n\r\n  return (\r\n    <Marquee speed={60} gradient={false}>\r\n      <div>{song}</div>\r\n    </Marquee>\r\n  );\r\n};\r\n\r\nexport default Scrobbler;\r\n","import './App.css';\nimport Scrobbler from './scrobble-reader/Scrobbler';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Scrobbler />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}